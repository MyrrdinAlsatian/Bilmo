{
	"info": {
		"_postman_id": "17190735-4a0a-4d69-8548-5eb29bea7c2b",
		"name": "Bilmo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12732844"
	},
	"item": [
		{
			"name": "Create a User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"username\", pm.response.json().email);\r",
							"pm.environment.set(\"iriUser\",pm.response.json()['@id']);\r",
							"pm.test('Status 201 ?', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\":\"password\",\r\n    \"name\":\"{{$randomCompanyName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/users",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Should not create a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status 500 ?', function () {\r",
							"    pm.response.to.have.status(500);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{username}}\",\r\n    \"password\":\"password\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/users",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get JWT token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"token\", pm.response.json().token);\r",
							"\r",
							"pm.test('Status 200 ?', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\":\"password\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/login_check",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"login_check"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"lastProduct\", pm.response.json().id);\r",
							"\r",
							"pm.test('Status 201 ?', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{$randomProductName}}\",\r\n    \"description\": \"{{$randomProduct}}\",\r\n    \"price\": \"{{$randomPrice}}\",\r\n    \"quantity\": {{$randomInt}},\r\n    \"brand\": \"{{brand}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/products",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a brand",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"brand\", pm.response.json()['@id']);\r",
							"\r",
							"pm.test('Status 201 ?', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{$randomCompanyName}}\",\r\n    \"description\": \"{{$randomLoremParagraph}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/brands",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"brands"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a brand Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"brand\", pm.response.json()['@id']);\r",
							"\r",
							"pm.test('Status 201 ?', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{$randomCompanyName}}\",\r\n    \"description\": \"{{$randomLoremParagraph}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/brands",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"brands"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a customers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"lastCustomer\", pm.response.json().id);\r",
							"\r",
							"pm.test('Status 201 ?', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{$randomLastName}}\",\r\n    \"forname\": \"{{$randomFirstName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"adress\": \"{{$randomStreetAddress}}\",\r\n  \"city\": \"{{$randomCity}}\",\r\n  \"country\": \"{{$randomCountry}}\",\r\n  \"zipcode\": \"{{$randomCountryCode}}\",\r\n  \"user\": [\"{{iriUser}}\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/customers",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "should edit a product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status 200 ?', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test('Modification de la quantit√©', function() {\r",
							"    pm.expect(pm.response.json()['quantity']).to.eql(42)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/merge-patch+json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"quantity\": 42\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/products/{{lastProduct}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"products",
						"{{lastProduct}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "should remove a customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status 204 ?', function () {\r",
							"    pm.response.to.have.status(204);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/merge-patch+json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/customers/A",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"customers",
						"A"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a Customer",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/api/customers/{{lastCustomer}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"customers",
						"{{lastCustomer}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bad Get a Customer",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/api/customers/Z",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"customers",
						"Z"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User N¬∞1",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/api/users/3",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"users",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get customers from a User",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}{{iriUser}}/customers",
					"host": [
						"{{URL}}{{iriUser}}"
					],
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a Users",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/users",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get details from customers from a User",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}{{iriUser}}/customer/{{lastCustomer}}",
					"host": [
						"{{URL}}{{iriUser}}"
					],
					"path": [
						"customer",
						"{{lastCustomer}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a Product",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/products/{{lastProduct}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"products",
						"{{lastProduct}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Product",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/products",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Product from brand",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/api/brands/4/products",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"brands",
						"4",
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bad Get Product from brand",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/api/brands/A/products",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"brands",
						"A",
						"products"
					]
				}
			},
			"response": []
		}
	]
}